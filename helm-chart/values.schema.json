{
  "$schema": "http://json-schema.org/draft/2020-12/schema#",
  "type": "object",
  "properties": {
    "replicaCount": {
      "type": "integer",
      "description": "Number of replicas",
      "minimum": 1
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Image repository"
        },
        "pullPolicy": {
          "type": "string",
          "description": "K8s image pull policy",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never"
          ]
        },
        "tag": {
          "type": "string",
          "description": "Image tag"
        }
      },
      "required": [
        "repository",
        "pullPolicy",
        "tag"
      ]
    },
    "imagePullSecrets": {
      "type": "array",
      "description": "K8s image pull secrets",
      "items": {
        "type": "object"
      }
    },
    "nameOverride": {
      "type": "string",
      "description": "Override name"
    },
    "fullnameOverride": {
      "type": "string",
      "description": "Override fully qualified name"
    },
    "command": {
      "type": [
        "array",
        "null"
      ],
      "description": "Command (entrypoint)",
      "items": {
        "type": "string"
      }
    },
    "args": {
      "type": [
        "array",
        "null"
      ],
      "description": "Arguments",
      "items": {
        "type": "string"
      }
    },
    "env": {
      "type": "array",
      "description": "K8s environment variables",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      }
    },
    "envDict": {
      "type": "object",
      "description": "Dictionary of environment variables",
      "additionalProperties": {
        "type": "string"
      }
    },
    "envFrom": {
      "type": "array",
      "description": "Environment variables taken from a ConfigMap or Secret",
      "items": {
        "type": "object"
      }
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Whether to create a service account"
        },
        "automount": {
          "type": "boolean",
          "description": "Whether to mount the service account into the pod"
        },
        "annotations": {
          "type": "object",
          "description": "K8s annotations"
        },
        "name": {
          "type": "string",
          "description": "Optionally override the service account name"
        }
      }
    },
    "podAnnotations": {
      "type": "object",
      "description": "K8s pod annotations"
    },
    "podLabels": {
      "type": "object",
      "description": "K8s pod labels"
    },
    "podSecurityContext": {
      "type": "object",
      "description": "Pod SecurityContext"
    },
    "securityContext": {
      "type": "object",
      "description": "Container SecurityContext"
    },
    "extraFiles": {
      "type": "object",
      "description": "Extra files to mount into the pod",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "mountPath": {
            "type": "string",
            "description": "Mount the file at this path in the pod"
          },
          "text": {
            "type": "string",
            "description": "Text content of the file"
          }
        }
      }
    },
    "service": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "K8s service type",
          "enum": [
            "ClusterIP",
            "NodePort",
            "LoadBalancer"
          ]
        },
        "port": {
          "type": "integer",
          "description": "Service port that it should listen on",
          "minimum": 1,
          "maximum": 65535
        }
      }
    },
    "ingress": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to create an Ingress"
        },
        "className": {
          "type": "string",
          "description": "Ingress class name"
        },
        "annotations": {
          "type": "object",
          "description": "K8s annotations"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "Host name to connect to the ingress"
              },
              "paths": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "Ingress path"
                    },
                    "pathType": {
                      "type": "string",
                      "description": "Type of ingress path"
                    }
                  }
                }
              }
            }
          }
        },
        "tls": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "secretName": {
                "type": "string",
                "description": "K8s TLS secret"
              },
              "hosts": {
                "type": "array",
                "description": "Hostnames",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "resources": {
      "type": "object",
      "description": "K8s resources"
    },
    "livenessProbe": {
      "type": "object",
      "description": "Override K8s livenessProbe"
    },
    "readinessProbe": {
      "type": "object",
      "description": "Override K8s readinessProbe"
    },
    "pvc": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Whether to create a PVC"
        },
        "storageClassName": {
          "type": [
            "string",
            "null"
          ],
          "description": "Storage class name"
        },
        "accessMode": {
          "type": "string",
          "description": "Volume access mode"
        },
        "storage": {
          "type": [
            "string"
          ],
          "description": "Size of the volume"
        },
        "mountPath": {
          "type": [
            "string"
          ],
          "description": "Mount the storage at the path in the pod"
        }
      }
    },
    "volumes": {
      "type": "array",
      "items": {
        "type": "object"
      },
      "description": "Additional K8s volumes"
    },
    "volumeMounts": {
      "type": "array",
      "items": {
        "type": "object"
      },
      "description": "Additional K8s volume mounts"
    },
    "nodeSelector": {
      "type": "object",
      "description": "Node selector"
    },
    "tolerations": {
      "type": "array",
      "description": "Node tolerations",
      "items": {
        "type": "object"
      }
    },
    "affinity": {
      "type": "object",
      "description": "Node affinity"
    }
  }
}
